# -*- coding: utf-8 -*-
"""EMail Spam Detection using Machine Learning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_u61s8PE1OseUdmp_nxZNnvMFjbDzGyq
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import confusion_matrix,classification_report,accuracy_score,f1_score,recall_score,precision_score

df=pd.read_csv('/content/sample_data/spam.csv',encoding='Latin')
df

df.head()

df.shape

df.tail()

df.shape

df.columns

df.duplicated().sum()

df.drop_duplicates(inplace=True)
df.duplicated().any()

df.info()

df.describe(include="all")

df.isna().sum()

df.drop(df.iloc[:,2:],axis=1,inplace=True)
df

df.columns=['Category','Subject']
df.columns

df['Category'].unique()

sns.countplot(data=df,x='Category')
plt.show()

df.loc[df['Category']=='spam','Category']=1
df.loc[df['Category']=='ham','Category']=0
df

df['Category'].value_counts().plot(kind='bar',color=('y','b'))
plt.show()

df['Subject'][[0,1,10,89,5569]]

from nltk.tokenize import RegexpTokenizer

def clean_str(string,reg=RegexpTokenizer(r'[a-z]')):
  string=string.lower()
  tokens=reg.tokenize(string)
  return " ".join(tokens)

df['Subject']=df['Subject'].apply(lambda string: clean_str(string))

df['Subject'][0]

df.head()

X= df['Category']
Y=df['Subject']

print(X)

print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=1)

X_train=X_train.astype('int')
X_test=X_test.astype('int')

print(X.shape)
print(X_train.shape)
print(X_test.shape)